version: '3.5'
networks:
    kafka:
      name: rmoff_kafka
      external: True
services:
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    networks: 
      - kafka
  alertmanager:
    image: prom/alertmanager:v0.26.0
    ports:
      - "19093:9093"
    networks: 
      - kafka
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks: 
      - kafka  
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    networks: 
      - kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      EXTRA_ARGS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.20.0.jar=9200:/usr/share/jmx_exporter/zookeeper.yml

    restart: always   
    volumes:
      - ./jmx-exporter:/usr/share/jmx_exporter/
  

  broker:
    image: confluentinc/cp-kafka:5.5.0
    container_name: broker
    networks: 
      - kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.20.0.jar=9200:/usr/share/jmx_exporter/kafka-broker.yml
    volumes:
      - ./jmx-exporter:/usr/share/jmx_exporter/
    restart: always

  kafka_connect :
    image :  kafka_connect
    container_name: kafka_connect_mqtt
    depends_on:
      - zookeeper
      - broker
    ports:
      - 8083:8083

    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker:9092"
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"  
    networks: 
      - kafka
          
  mongodb:
    image: mongo
    networks:
      - kafka
        
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: observability
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb:/data/db
      - ./mongodb/input/:/data/input/
      - ./mongodb/mongod.conf:/etc/mongod.conf      
   
  postgres:
      image: postgres:13
      networks:
      - kafka
      environment:
        POSTGRES_DB: postgres
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: admin
      volumes:
      - ./data:/var/lib/postgresql/data
      ports:
        - 5432:5432

volumes:
  grafana-data:
    